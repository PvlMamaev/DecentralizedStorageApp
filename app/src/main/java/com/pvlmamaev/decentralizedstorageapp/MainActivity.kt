package com.pvlmamaev.decentralizedstorageapp

import android.os.Bundle
import android.webkit.JavascriptInterface
import android.webkit.WebView
import android.view.View
import androidx.activity.enableEdgeToEdge
import androidx.appcompat.app.AppCompatActivity
import androidx.core.view.WindowCompat
import android.app.Activity
import android.content.ActivityNotFoundException
import android.content.Intent
import android.net.Uri
import android.os.Build
import android.util.Log
import android.webkit.WebResourceError
import android.webkit.WebResourceRequest
import android.webkit.WebViewClient
import android.widget.Button
import android.widget.TextView
import androidx.activity.result.contract.ActivityResultContracts
import java.io.File
import javax.crypto.SecretKey
import androidx.lifecycle.lifecycleScope
import kotlinx.coroutines.launch

class MainActivity : AppCompatActivity() {

    private var encryptionKey: SecretKey? = null
    private var encryptedFile: File? = null

    private lateinit var selectFileButton: Button
    private lateinit var connectToWallet: Button
    private lateinit var sendTransaction: Button
    private lateinit var selectedFileText: TextView
    private lateinit var tonWebView: WebView
    private lateinit var base64Payload: String
    private var selectedFileUri: Uri? = null

    // –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –∫–æ–ª–±—ç–∫–∞ –Ω–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤—ã–±–æ—Ä–∞ —Ñ–∞–π–ª–∞
    private val filePickerLauncher = registerForActivityResult(
        ActivityResultContracts.StartActivityForResult()
    ) { result ->
        if (result.resultCode == Activity.RESULT_OK) {
            // –ü–æ–ª—É—á–µ–Ω–∏–µ URI –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ —Ñ–∞–π–ª–∞
            result.data?.data?.let { uri ->
                selectedFileUri = uri
                // –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏–º–µ–Ω–∏ –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ —Ñ–∞–π–ª–∞
                selectedFileText.text = "–í—ã–±—Ä–∞–Ω —Ñ–∞–π–ª: ${uri.lastPathSegment}"

                // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∫–ª—é—á –∏ —à–∏—Ñ—Ä—É–µ–º —Ñ–∞–π–ª
                encryptionKey = FileEncryptor.generateKey()
                encryptedFile = FileEncryptor.encryptFile(this, uri, encryptionKey!!)

                // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—É—Ç—å –∫ –∑–∞—à–∏—Ñ—Ä–æ–≤–∞–Ω–Ω–æ–º—É —Ñ–∞–π–ª—É (–¥–ª—è –æ—Ç–ª–∞–¥–∫–∏)
                selectedFileText.append("\n–§–∞–π–ª –∑–∞—à–∏—Ñ—Ä–æ–≤–∞–Ω: ${encryptedFile?.absolutePath}")

                lifecycleScope.launch {
                    try {
                        val cid = PinataUploader.uploadFile(encryptedFile!!)
                        selectedFileText.append("\nCID: $cid")

                        base64Payload = CidSerializer.cidToBase64Boc(cid)

                    } catch (e: Exception) {
                        selectedFileText.append("\n–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ: ${e.message}")
                    }
                }
            }
        }
    }

    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        WindowCompat.setDecorFitsSystemWindows(window, true)
        setContentView(R.layout.activity_main)

        // 0. –ù–∞—Ö–æ–¥–∏–º view
        selectFileButton = findViewById(R.id.selectFileButton)
        connectToWallet = findViewById(R.id.connectToWallet)
        sendTransaction = findViewById(R.id.sendTransaction)
        selectedFileText = findViewById(R.id.selectedFileText)
        tonWebView = findViewById(R.id.tonWebView)

        // 1. –í–∫–ª—é—á–∞–µ–º WebView‚Äë–¥–µ–±–∞–≥ (DevTools)
        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.KITKAT) {
            WebView.setWebContentsDebuggingEnabled(true)
        }

        // 2. –ë–∞–∑–æ–≤—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ WebView
        with(tonWebView.settings) {
            javaScriptEnabled = true
            allowFileAccess = true
            allowFileAccessFromFileURLs = true
            allowUniversalAccessFromFileURLs = true
            domStorageEnabled = true
        }

        // 3. –î–æ–±–∞–≤–ª—è–µ–º JS-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏ –∏–∑ React
        //    ‚Äî –≤ React –≤—ã –≤—ã–∑—ã–≤–∞–µ—Ç–µ window.AndroidBridge.onTxResult / onTxError(...)
        tonWebView.addJavascriptInterface(object {
            @JavascriptInterface
            fun onTxResult(raw: String) {
                runOnUiThread { selectedFileText.append("\n‚úÖ Tx success: $raw") }
            }
            @JavascriptInterface
            fun onTxError(msg: String) {
                runOnUiThread { selectedFileText.append("\n‚ùå Tx error: $msg") }
            }
        }, "AndroidBridge")

        // 4. –ö–∞—Å—Ç–æ–º–Ω—ã–π WebViewClient –¥–ª—è –ø–µ—Ä–µ—Ö–≤–∞—Ç–∞ deep-link‚Äô–æ–≤ ton://‚Ä¶
        tonWebView.webViewClient = object : WebViewClient() {

            // 1) –í–æ—Ç —Ç—É—Ç, —Å—Ä–∞–∑—É –ø–æ—Å–ª–µ '{', –æ–±—ä—è–≤–ª—è–µ–º handleCustomScheme:
            private fun handleCustomScheme(url: String): Boolean {
                // –ø—Ä–æ–ø—É—Å–∫–∞–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ URL
                if (url.startsWith("http://")
                    || url.startsWith("https://")
                    || url.startsWith("file://")
                    || url.startsWith("about:blank")) {
                    return false
                }
                // –≤—Å–µ –æ—Å—Ç–∞–ª—å–Ω—ã–µ ‚Äì –æ—Ç–∫—Ä—ã–≤–∞–µ–º —á–µ—Ä–µ–∑ Intent
                return try {
                    startActivity(Intent(Intent.ACTION_VIEW, Uri.parse(url)))
                    true
                } catch (e: ActivityNotFoundException) {
                    Log.w("WebView", "No handler for scheme in URL: $url")
                    true
                }
            }

            // 2) –ê —Ç–µ–ø–µ—Ä—å override-–º–µ—Ç–æ–¥—ã, –∫–æ—Ç–æ—Ä—ã–µ –ø—Ä–æ—Å—Ç–æ –¥–µ—Ä–≥–∞—é—Ç handleCustomScheme:
            override fun shouldOverrideUrlLoading(
                view: WebView?, request: WebResourceRequest?
            ): Boolean {
                return handleCustomScheme(request?.url.toString())
            }

            override fun onPageFinished(view: WebView?, url: String?) {
                super.onPageFinished(view, url)
                Log.i("WebView", "üìó –∑–∞–≥—Ä—É–∂–µ–Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–∞: $url")
            }

            override fun onReceivedError(
                view: WebView?,
                request: WebResourceRequest?,
                error: WebResourceError?
            ) {
                Log.e("WebView", "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ ${request?.url}: ${error?.description}")
            }
        }


        // 5. –ó–∞–≥—Ä—É–∂–∞–µ–º –≤–∞—à—É –ª–æ–∫–∞–ª—å–Ω—É—é —Å–±–æ—Ä–∫—É
        //        tonWebView.loadUrl("https://pvlmamaev.github.io/DecentralizedStorageApp/app/src/main/assets/deploy.html")
        tonWebView.loadUrl("file:///android_asset/tonconnect/index.html")
        tonWebView.visibility = View.GONE


        // 6. –î–∞–ª–µ–µ –≤–∞—à filePickerLauncher –∏ –æ—Ç–ø—Ä–∞–≤–∫–∞ base64-–ø–µ–π–ª–æ–∞–¥–∞ –≤ JS:
        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–∫–∏ –≤—ã–±–æ—Ä–∞ —Ñ–∞–π–ª–∞
        selectFileButton.setOnClickListener {
            val intent = Intent(Intent.ACTION_GET_CONTENT).apply {
                type = "*/*"
            }
            filePickerLauncher.launch(Intent.createChooser(intent, "–í—ã–±–µ—Ä–∏—Ç–µ —Ñ–∞–π–ª"))
        }


        connectToWallet.setOnClickListener {
            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º WebView –∏ –ø–µ—Ä–µ–¥–∞—ë–º payload –≤ JavaScript
            tonWebView.visibility = View.VISIBLE
//            tonWebView.evaluateJavascript(
//                "window.sendCid && window.sendCid('$base64Payload');",
//                null
//            )

//            val js = "pageReady && window.sendCid('$base64Payload')"
//            tonWebView.post { tonWebView.evaluateJavascript(js, null) }
        }

        sendTransaction.setOnClickListener {
            tonWebView.evaluateJavascript("window.checkConnection()", null)
            val testCid = "QmQMFFKqQM7vCJVFUW9zDAfHqtupqjptB5YNUMmE66e1ZP"
            val boc = CidSerializer.cidToBase64Boc(testCid)  // –∏–ª–∏ —Å—Ä–∞–∑—É base64Boc, –µ—Å–ª–∏ —É –≤–∞—Å –µ—Å—Ç—å

            tonWebView.evaluateJavascript(
                "window.dispatchEvent(new Event('tonConnectReturn'));",
                null
            )
            // –∑–∞—Ç–µ–º
            tonWebView.evaluateJavascript("window.sendCid('$boc')", null)
        }

    }
}
